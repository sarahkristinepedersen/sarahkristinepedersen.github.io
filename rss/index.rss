<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"><channel><title>Go ahead, make my day</title><description>Go ahead, make my day</description><link>http://localhost:2368/</link><generator>Ghost 0.6</generator><lastBuildDate>Tue, 08 Sep 2015 10:33:09 GMT</lastBuildDate><atom:link href="http://localhost:2368/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>SOLID - Dependency Inversion Principle</title><description>&lt;p&gt;&lt;em&gt;Describe the SOLID principle of dependency inversion, by giving an example of dependency injection with a module and a class. How does DI improve the reusability of code?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Overall&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Abstractions should not depend on details&lt;/li&gt;
&lt;li&gt;Code should depend on things that are at the same or higher level of abstraction&lt;/li&gt;&lt;/ul&gt;</description><link>http://localhost:2368/2015/09/08/solid-dependency-inversion-principle/</link><guid isPermaLink="false">fbb60beb-d172-493e-b10e-c2409ef10869</guid><dc:creator>Sarah Kristine Pedersen</dc:creator><pubDate>Tue, 08 Sep 2015 10:30:24 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;Describe the SOLID principle of dependency inversion, by giving an example of dependency injection with a module and a class. How does DI improve the reusability of code?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Overall&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Abstractions should not depend on details&lt;/li&gt;
&lt;li&gt;Code should depend on things that are at the same or higher level of abstraction&lt;/li&gt;
&lt;li&gt;High level policy should not depend on low level details&lt;/li&gt;
&lt;li&gt;Capture low-level dependencies in domain-relevant abstractions
&lt;em&gt;&lt;a href="http://martinfowler.com/articles/dipInTheWild.html"&gt;http://martinfowler.com/articles/dipInTheWild.html&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Dependency Inversion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Dependency Inversion Principle is about reversing dependencies from "higher level" components to "lower level" components. This means that the "lower level" components are dependent on the interfaces owned by the "higher level" components.&lt;/p&gt;

&lt;p&gt;The most common place that talk about dependency inversion comes up is when folks are thinking about automated testing. While Ruby makes it possible to mock out calls to pretty much any object, it's a whole lot cleaner to pass in raw mock objects than it is to set expectations on real objects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dependency Injection&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In software engineering, dependency injection is a software design pattern that implements inversion of control for resolving dependencies. Dependency injection means giving an object its instance variables&lt;/p&gt;

&lt;p&gt;Dependency injection is basically providing the objects that an object needs (its dependencies) instead of having it construct them itself. It's a very useful technique for testing, since it allows dependencies to be mocked or stubbed out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benefits of DIP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The main reason for using dependency injection is to be able to swap the dependencies of an object at run time - this is mostly useful for testing. &lt;/p&gt;

&lt;p&gt;A dependency is an object that can be used (a service). An injection is the passing of a dependency to a dependent object (client) that would use it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Risk avoidance&lt;/li&gt;
&lt;li&gt;Makes testing easier (both writing and reading) by letting us substitute implementations in our tests&lt;/li&gt;
&lt;li&gt;Creates a more robust and flexible program&lt;/li&gt;
&lt;li&gt;Opportunity to customise code without rebuilding it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let say you want to switch on a lamp i a room. You don’t have to cut into the wall and fiddle around with the electrics - that has already been done and we don’t to worry about it anymore. However, this happened initially and in order to switch on the lamp, we are dependant on this. From this point, the electrical outlet provides a standard interface for operating the lamp. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;#a typical approach&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;module Electrics  
end  
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;include Electrics  
class Lamp  
  def initialize
    @plug = Lamp.new(:type =&amp;gt; ‘uk’)
  end
end  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;#DI approach&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Lamp  
  def initialize(plug)
    @plug = plug
  end
end  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;DIP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="http://i.stack.imgur.com/BrkBd.png" alt=""&gt;&lt;/p&gt;

&lt;p&gt;Source: &lt;em&gt;&lt;a href="http://i.stack.imgur.com/BrkBd.png"&gt;http://i.stack.imgur.com/BrkBd.png&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</content:encoded></item><item><title>Red Green Refactoring</title><description>&lt;p&gt;To truly understand the idea behind red green refactoring (RGR), its first important to appreciate the principles behind Test Driven Development (TDD).&lt;/p&gt;

&lt;p&gt;TDD is essentially a very simple albeit absolutely paramount philosophy to coding. In fact to simply label it a philosophy would be somewhat of an indignity - coding&lt;/p&gt;</description><link>http://localhost:2368/2015/09/03/red-and-green-refactoring/</link><guid isPermaLink="false">ad2a8b26-f9d9-4832-b38f-67d4e0e6261a</guid><dc:creator>Sarah Kristine Pedersen</dc:creator><pubDate>Thu, 03 Sep 2015 12:24:44 GMT</pubDate><content:encoded>&lt;p&gt;To truly understand the idea behind red green refactoring (RGR), its first important to appreciate the principles behind Test Driven Development (TDD).&lt;/p&gt;

&lt;p&gt;TDD is essentially a very simple albeit absolutely paramount philosophy to coding. In fact to simply label it a philosophy would be somewhat of an indignity - coding is TDD and TDD is coding (in a good-practice sense at least anyway). The premise is simple - you write a code intending to fail, and then you modify the code to make it pass. Rinse and repeat to satisfaction. Simple.&lt;/p&gt;

&lt;p&gt;RGR articulates that philosophy into three tangible steps:&lt;/p&gt;

&lt;p&gt;The Red step  - the first step where you kickstart the process by writing a unit test that you are certain will fail. In a testing environment this often returns a red failure message, hence the red connotation.&lt;/p&gt;

&lt;p&gt;The Green step - revisit your failed code, study the failure/error message that underlies the code, and then make the necessary modifications so that your unit test will pass, or go green!&lt;/p&gt;

&lt;p&gt;The Refactor step - with your unit test passing and satisfied that your code is functional, the next step would be to refactor or fix up the code to make it seem leaner, more aesthetic and most importantly - quicker to run. Principles such as DRY (Do not Repeat Yourself) apply here when considering refactoring.&lt;/p&gt;

&lt;p&gt;Repeat until satisfied. That’s it!&lt;/p&gt;

&lt;p&gt;So we know what it is and how it works, but the more pressing question is why bother?&lt;/p&gt;

&lt;p&gt;The RGR is a circular process that functions as a tool for approaching a coding related problem. By constantly analysing and rethinking your hypotheses, the code will become less likely to contain bugs as you via the tests are able to react to problems as they occur.&lt;/p&gt;

&lt;p&gt;Studies show that programmers who use the red green refactoring approach become more efficient and productive. Focusing on individual test cases and making them pass these tests eventually makes the code more smooth, functional and user-friendly.&lt;/p&gt;</content:encoded></item><item><title>Pre-Course (week 3)</title><description>&lt;p&gt;It's been all quiet on the Western front for some time, and there's a reason for that.&lt;/p&gt;

&lt;p&gt;Wednesday 19 August, half-way through week 3; sincerely, I was about to give up. In my mind I had already given up. However, retrospectively, this was me at a crossroads – I could either&lt;/p&gt;</description><link>http://localhost:2368/2015/08/31/hhh/</link><guid isPermaLink="false">5c10674e-a2e5-4781-ac58-53e915a0a691</guid><dc:creator>Sarah Kristine Pedersen</dc:creator><pubDate>Mon, 31 Aug 2015 18:47:25 GMT</pubDate><content:encoded>&lt;p&gt;It's been all quiet on the Western front for some time, and there's a reason for that.&lt;/p&gt;

&lt;p&gt;Wednesday 19 August, half-way through week 3; sincerely, I was about to give up. In my mind I had already given up. However, retrospectively, this was me at a crossroads – I could either see myself defeated or give it another chance. I was facing some unexpected difficulties that stripped me from courage and optimism. The horizon had disappeared and I was, out of a sudden, navigating in stormy waters.&lt;/p&gt;

&lt;p&gt;For those of you who are about to join Makers, and have never coded before, the following might prove useful to know: once you think you've got everything under control, finally feel you've caught up with the others, and are confident about the prospects of completing your assignments, the situation can diametrically change.&lt;/p&gt;

&lt;p&gt;So here's what happened. Going through Ruby Kickstart, I found the hour-long video and first five exercises of session 1 a piece of cake. However, the sixth and seventh were unexpectedly difficult, and at that time, I didn't even understand the provided solutions. Annoyed about this, I decided to move forward with session 2 and leave the two other exercises for now but this strategy failed miserably.&lt;/p&gt;

&lt;p&gt;I looked at the exercises. And looked again. Doubled checked they belonged to session 2. It didn't make sense to me. Whereas most of session 1 almost made me feel superior, session 2 should have been called Hubris. To me, the video took a quantum leap in the level of complexity, and afterwards I was so bewildered that I sobbingly had to reread the exercises. I felt that I was going to throw up. If Makers' Academy was already that difficult for me (merely half way through week 3) did I then have the qualifications and prerequisites for keeping up with the others and eventually become a junior developer? And perhaps even more importantly, did I have the guts? Makers' is not just about coding skills - it is just as much about personal traits; you need to be mentally strong, able to collaborate, have spare capacity to help and motivate others and on top of that be highly attentive for some very intense months. &lt;/p&gt;

&lt;p&gt;At this point Wednesday, I was down – and it hurt... a lot. I felt disappointed, sad, like a failure, stupid and ignorant. I wanted to throw in the towel but then what would I be left with? A career I'm not particularly interested in pursuing.&lt;/p&gt;

&lt;p&gt;The following day was no better. After 11 hours of sleep, my pumping heart woke me up. No nightmares but I felt the stress, pressure and fear. I couldn't get my pulse down. I took a long shower which helped but it was merely a consolation. My pulse got up again and the nausea strengthened. I couldn't focus. The day went on pretty much the same way. I was torn, still about to give up, but determined to join the pair-programming with some of the other people from my cohort and the graduation Friday.&lt;/p&gt;

&lt;p&gt;I want to cement that I'm not a quitter. I know you might find it hard to believe after reading this screed, but when you fall deep down, it takes serious belief in the greater mission in order to drag yourself up from the hole, dust yourself off, and continue down the road.&lt;/p&gt;

&lt;p&gt;So, Friday I went to Makers. I was calm and had come to terms with my decision; if today didn't go well, I would bid Makers goodbye and amend my plans for the future - of course, this would be a shame, but I would simply have to move on and accept my faith. Luckily, I didn't come to that.&lt;/p&gt;

&lt;p&gt;Meeting the others was a great success. Many things settled that day, but most importantly, it turned out that most of us shared the same concerns and frustrations. I cannot express how much of a relief this was. On top of that, I can highly recommend attending the graduations - seeing what the seniors have accomplished in a few months alined my expectations and experiencing the tight bond that existed among all students was reassuring.&lt;/p&gt;

&lt;p&gt;I left Makers later that night with a strong feeling that everything would be alright. &lt;/p&gt;</content:encoded></item><item><title>Pre-course (week 1)</title><description>&lt;p&gt;&lt;em&gt;Sunday 9.8.2015&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This weekend I've felt guilty and not because I've done something – quite the opposite. I have allowed myself to enjoy the rare view of the sun in Denmark and spend some quality time with my family before it all sets in.&lt;/p&gt;

&lt;p&gt;During the pre-course (initial four&lt;/p&gt;</description><link>http://localhost:2368/2015/08/31/pre-course-week-1/</link><guid isPermaLink="false">5bc36820-2db9-4829-a8b1-917d5dc685d6</guid><dc:creator>Sarah Kristine Pedersen</dc:creator><pubDate>Mon, 31 Aug 2015 18:02:50 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;Sunday 9.8.2015&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This weekend I've felt guilty and not because I've done something – quite the opposite. I have allowed myself to enjoy the rare view of the sun in Denmark and spend some quality time with my family before it all sets in.&lt;/p&gt;

&lt;p&gt;During the pre-course (initial four weeks of Makers which are off-site), the first weeks are spent on the command line and Git. Realising that the Friday challenge (end-of-week assignment to test your understanding) was already up, and that we didn't have to await any further instructions, I noticed fellow Makers submitting theirs early. I felt the group pressure as you definitely don't want to fall behind. Being a part of a big cohort consisting of people with completely different backgrounds and coding skills, I guess my greatest fear is this – falling behind. At this stage, I am not familiar with my own code learning abilities and where to place my technical skills compared to the other Makers. At Makers you're never done, and when it's stated that you should spend 15-20 hours/week on coding during the pre-course, this is meant as a minimum – there're not upper limit for your learning. The harder you work, the more you learn.&lt;/p&gt;</content:encoded></item><item><title>Upon Reflexion</title><description>&lt;p&gt;I haven’t kept a diary since I was a nine-year-old devoted Spice Girls fan/football geek (thanks Mel C for making those two things compatible). So why start now? Considering what is to come, it seems right; I need to be conscious and aware of my own development and&lt;/p&gt;</description><link>http://localhost:2368/2015/08/18/upon-refelxion/</link><guid isPermaLink="false">7f8fb4fa-6989-4403-83bd-1b99be834381</guid><dc:creator>Sarah Kristine Pedersen</dc:creator><pubDate>Tue, 18 Aug 2015 21:38:40 GMT</pubDate><content:encoded>&lt;p&gt;I haven’t kept a diary since I was a nine-year-old devoted Spice Girls fan/football geek (thanks Mel C for making those two things compatible). So why start now? Considering what is to come, it seems right; I need to be conscious and aware of my own development and remind myself about that. Just to be clear, I’m not going to take you through Makers Academy day for day describing every single step of the journey — that I’ll keep to my self and there exist plenty of other Makers blogs dedicated to this. So what is the purpose?&lt;/p&gt;

&lt;p&gt;Makers Academy is at this stage all about unknown unknowns. However, what I do know is that I’m going to face some serious challenges on my 16 weeks long journey. I expect to be frustrated every single day about to give up and the only thing keeping me afloat is the expectation that I will be alright — that seems to be the precedence. If you don’t keep spirits high, you are most likely to drag yourself down and fail; keep telling yourself that you’re not good enough and you will end up with a self-fulfilling prophecy. So, that I’m not going to do.&lt;/p&gt;

&lt;p&gt;During this journey, I want to follow my progress. Despite evident for your surroundings, progress might not always be evident to yourself. It is easy to feel stuck and lose motivation, but retrospectively, you notice how far you have come. I might not be able to entirely prevent feeling this way, but I am going to do the best I can to accommodate it by evaluating the course and my development day for day, week for week, month for month.&lt;/p&gt;

&lt;p&gt;I probably wouldn’t have published my thoughts if it wasn’t for the fact that Makers encourage us to write a blog for both ours and their sake. And if I can assist in convincing some of you out there to break free from dragging patterns and revise your future — whether it will take you the coding way or somewhere else — it will be worth it.&lt;/p&gt;</content:encoded></item><item><title>What He Said ...</title><description>&lt;blockquote&gt;
  &lt;p&gt;“Twenty years from now you will be more disappointed by the things you didn’t do than by the ones you did. So throw off the bowlines. Sail away from the safe harbor. Catch the trade winds in your sails. Explore. Dream. Discover.” &lt;em&gt;Mark Twain&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Saturday 8.8.2015&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I&lt;/p&gt;</description><link>http://localhost:2368/2015/08/18/what-he-said/</link><guid isPermaLink="false">4b786f75-0dd0-406b-b0e9-fe830c1a2593</guid><dc:creator>Sarah Kristine Pedersen</dc:creator><pubDate>Tue, 18 Aug 2015 20:32:54 GMT</pubDate><content:encoded>&lt;blockquote&gt;
  &lt;p&gt;“Twenty years from now you will be more disappointed by the things you didn’t do than by the ones you did. So throw off the bowlines. Sail away from the safe harbor. Catch the trade winds in your sails. Explore. Dream. Discover.” &lt;em&gt;Mark Twain&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Saturday 8.8.2015&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I hate quotes — or more precisely, I hate how quotes are being misused. Honestly, I think quotes often devalue the quality of a text. I dislike how quotes are used as a mean to appear well-considered, reflective and enlightened. I dislike how quotes are used as a leverage for placing yourself on the same footing as the originator of the quote. I dislike how quotes tend to be ripped out of a context, twisted or even attributed the wrong person. So why initiate this post with a quote attributed Mark Twain (an attribution that cannot even be verified)?&lt;/p&gt;

&lt;p&gt;I admit, quotes can capture the reader’s attention and function as potent carriers of meaning; they can condense and encapsulate the message of a text and yes, sometimes they even have the ability of inspiring the audience. However, the vast majority of times, quotes merely make me judge the writer perceiving him as being ignorant (I know, I know, that might say more about me as a person than the writer). I realise this is not the best defence of what is to come. Why? Well, because in my adult life, two quotes in particular have influenced how I think and the decisions I make.&lt;/p&gt;

&lt;p&gt;The first quote, as you might have guessed, is the aforementioned Explore, Dream, Discover — and not just in a travel-sense. Empirically, I know how easy it is to get comfortable and maintain the status quo; educational and job-wise, geographically, and even when it comes to everyday routines. While it might work for years, I find the prospects of always repeating and never challenging myself depressing. That’s why I constantly try to stir up myself.&lt;/p&gt;

&lt;p&gt;I’m fully aware of the cheesy origin of the second quote; some years ago, I was a keen follower of the TV series “Lost” (well, at least the first three seasons). One of the characters, the enigmatic and strong-willed John Locke, often uttered the words; “Don’t tell me what I can’t do!”. “Don’t tell me what I can’t do”, might seem fairly bland, but it occurred to me how often society in general tells us what to do and discourages us from ambitious, adventurous and anti-conform ideas because they might seem unrealistic or require lots of hard work.&lt;/p&gt;

&lt;p&gt;I’ve never been resting on my laurels and I believe “that every man is the architect of his own fortune” (oops I did it again), but realising that what you’ve spent years on deciding, studying for, struggling for, and working on is not what you really want to do, is harsh — and I mean really harsh. Even though those years have not been wasted, you can’t help feeling so and I wonder what I could have spent my resources on instead. Some people know from early childhood that they want to become architects, nurses, teachers, football players, actors and so forth; I’ve never felt that way (well, ok, that’s not entirely true; I wanted to become a detective, a damn good detective, and I wanted to be as cool as Tintin). So what happened?&lt;/p&gt;

&lt;p&gt;The painfully honest and somewhat boring truth is that I am two years out of university with a masters in Communications (didn’t know what else to study and I figured I had to study something useful and versatile), have years of deeply relevant student job experience and two years of full time job experience — and where has it led me? General marketing jobs in corporate environments.&lt;/p&gt;

&lt;p&gt;Thus, my last job made me question my situation; it’s not that I didn’t like working there (my colleagues were the best!), but managing webinars and writing standard newsletters was not my cup of tea. I started fearing getting stuck in a similar position and for the next many years and continue a career in general marketing that I am not passionate about. I have never chosen the beaten path, and I knew that it was time to do something about my future.&lt;/p&gt;

&lt;p&gt;Some months prior to that, the idea of applying for coding bootcamps had been suggested to me and while I thought of the idea as being “cool” and “bad-ass”, I didn’t take it seriously. Why? I’ve never been a math-prodigy, I have no coding experience whatsoever, I don’t have an understanding of computer science, and it seems like programmers have been dedicated to coding since they were kids. How would I be able to compete with that?&lt;/p&gt;

&lt;p&gt;For years I’ve wanted to enter the start-up scene but without any extraordinary digital marketing or tech skills, it proved difficult. After my “epiphany”, I spared the idea another thought and I began researching coding bootcamps in London. Then, I came across Makers Academy and that became the beginning of a journey.&lt;/p&gt;

&lt;p&gt;I spent a long time scrutinising Makers’ reputation to verify their legitimacy. I read blogs and fora, researched partner companies, talked to people in the tech environment and attended Silicon Milkroundabout. All very positive and encouraging. So, even though the idea of learning to code in 16 weeks and gaining enough skills to become a junior developer seemed unbelievable to me, I was convinced. Now was the right time, I quit my job and threw off the bowlines.&lt;/p&gt;

&lt;p&gt;To make a long story short (shorter), I applied, studied, went to the interview, got accepted and now I am on the first week of the pre-course (four weeks of remote studies). Having prepared (both mentally, physically and study-wise) for a long time now, I’m confident that I’m going to make it. The road will be short, steep, sweaty and scary, but I didn’t expect anything else. By the end of the day, applying for this course is a huge leap of faith, and frankly it sounds harder than anything I’ve done before. However, if you never challenge yourself you don’t discover what you are capable of and able to accomplish. Push yourself hard, then harder and even harder than that, and don’t listen to people trying to drag you down just because they are not courageous enough or don’t have what it takes. Trust yourself and jump.&lt;/p&gt;</content:encoded></item></channel></rss>